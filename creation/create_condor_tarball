#!/bin/env python

#
# Description:
#  This program creates a condor tarball
#  suitable to be used in the glideins
#

import os
import sys
STARTUP_DIR=sys.path[0]
import os.path
import string
import traceback
sys.path.append(os.path.join(STARTUP_DIR,"lib"))
sys.path.append(os.path.join(STARTUP_DIR,"../lib"))
import cgWCreate

def usage():
    print "usage: create_condor_tarball <tarball_out_fname> <condor_dir>"
    print


################################################################################

def main(argv):
    if len(argv)!=3:
        usage()
        sys.exit(1)

    out_fname=argv[1]
    in_dir=argv[2]

    try:
        tar_fd=cgWCreate.create_condor_tar_fd(in_dir)
    except RuntimeError,e:
        print "%s"%e
        sys.exit(2)

    try:
        out_fd=open(out_fname,"w")
    except:
        usage()
        tb = traceback.format_exception(sys.exc_info()[0],sys.exc_info()[1],
                                        sys.exc_info()[2])
        print string.join(tb,'\n')
        sys.exit(3)

    delete_at_end=True # cleanup by default
    try:
        out_fd.write(tar_fd.read())
        delete_at_end=False # successful, preserve
    finally:
        out_fd.close()

        if delete_at_end:
            try:
                os.unlink(out_fname)
                print "Tarball %s deleted"% out_fname
            except:
                # never throw an error in the file deletion
                pass 

    

############################################################
#
# S T A R T U P
# 
############################################################

if __name__ == '__main__':
    main(sys.argv)
